{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helpers.js","App.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","borderRadius","width","height","display","gridTemplate","alignSelf","Board","squares","map","square","i","parentStyle","flexDirection","flexWrap","justifyContent","alignItems","Game","useState","Array","fill","board","setBoard","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","boardCopy","marginLeft","marginRight","borderStyle","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEMA,EAAQ,CACVC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QASEC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACX,wBAAQT,MAAOA,EAAOS,QAASA,EAA/B,SACKD,KCVHR,EAAQ,CACVE,OAAQ,qBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,aAAc,kCACdC,UAAW,UAWAC,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASR,EAAZ,EAAYA,QAAZ,OACV,qBAAKT,MAAOA,EAAZ,SACKiB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,cAAC,EAAD,CAAgBZ,MAAOW,EAAQV,QAAS,kBAAMA,EAAQW,KAAzCA,SCZnBC,EAAc,CAClBR,QAAS,OACTS,cAAe,SACfC,SAAU,SACVC,eAAgB,SAChBC,WAAY,SACZb,OAAQ,SA6BKc,EA1BF,WACX,MAA0BC,mBAASC,MAAM,GAAGC,KAAK,OAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EChBD,SAAyBjB,GAW5B,IAVA,IAAMkB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAf,EAAI,EAAGA,EAAIe,EAAMC,OAAQhB,IAAK,CACrC,kBAAkBe,EAAMf,GAAxB,GAAOiB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAItB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQoB,KAAOpB,EAAQsB,GACpE,OAAOtB,EAAQoB,GAGnB,OAAO,KDDMG,CAAgBV,GAY/B,OACE,sBAAK9B,MAAOqB,EAAZ,UACE,cAAC,EAAD,CAAOJ,QAASa,EAAOrB,QAZP,SAACW,GACnB,IAAMqB,EAAS,YAAOX,GAClBI,GAAUO,EAAUrB,KACxBqB,EAAUrB,GAAKY,EAAU,IAAM,IAC/BD,EAASU,GACTR,GAAYD,OAQV,gCACE,4BAAIE,EAAS,WAAaA,EAAS,iBAAmBF,EAAU,IAAM,OANlD,wBAAQvB,QAAS,kBAAMsB,EAASH,MAAM,GAAGC,KAAK,QAA9C,+BExBtB7B,EAAQ,CACZ0C,WAAY,OACZC,YAAa,OACbC,YAAa,QACbjC,MAAO,MACPC,OAAO,SAaMiC,MAXf,WACE,MAA8BlB,oBAAS,GAAvC,mBACA,OADA,UAEE,mCACE,qBAAK3B,MAAOA,EAAO8C,UAAU,aAA7B,SACE,cAAC,EAAD,S,YCPRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7c411805.chunk.js","sourcesContent":["import React from 'react';\n\nconst style = {\n    background: 'lightblue',\n    border: '2px solid darkblue',\n    fontSize: '30px',\n    fontWeight: '800',\n    cursor: 'pointer',\n    outline: 'none'\n};\n\nconst Square = ({ value, onClick }) => (\n    <button style={style} onClick={onClick}>\n        {value}\n    </button>\n);\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nconst style = {\n    border: '4px solid darkblue',\n    borderRadius: '10px',\n    width: '250px',\n    height: '250px',\n    display: 'grid',\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)',\n    alignSelf: 'center',\n};\n\nconst Board = ({ squares, onClick }) => (\n    <div style={style}>\n        {squares.map((square, i) => (\n            <Square key={i} value={square} onClick={() => onClick(i)} />\n        ))}\n    </div>\n)\n\nexport default Board;","import React, { useState } from \"react\";\nimport { calculateWinner } from \"../helpers\";\nimport Board from \"./Board\";\n\nconst parentStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexWrap: \"nowrap\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: \"100vh\",\n};\n\nconst Game = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = (i) => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[i]) return;\n    boardCopy[i] = xIsNext ? \"X\" : \"O\";\n    setBoard(boardCopy);\n    setXisNext(!xIsNext);\n  };\n\n  const renderMoves = () => <button onClick={() => setBoard(Array(9).fill(null))}>Start Game</button>;\n\n  return (\n    <div style={parentStyle}>\n      <Board squares={board} onClick={handleClick} />\n      <div>\n        <p>{winner ? \"Winner: \" + winner : \"Next Player: \" + (xIsNext ? \"X\" : \"O\")}</p>\n        {renderMoves()}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","export function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }","import React, { useState } from \"react\";\nimport Game from \"./components/Game\";\nconst style = {\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  borderStyle: \"solid\",\n  width: \"30%\",\n  height:'100vh',\n};\nfunction App() {\n  const [newGame, setNewGame] = useState(false);\n  return (\n    <>\n      <div style={style} className=\"game-board\">\n        <Game />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}